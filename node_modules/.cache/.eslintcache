[{"/Users/alirebaie/Desktop/ai-travel-planner/src/index.js":"1","/Users/alirebaie/Desktop/ai-travel-planner/src/App.js":"2","/Users/alirebaie/Desktop/ai-travel-planner/src/reportWebVitals.js":"3"},{"size":535,"mtime":1686125757000,"results":"4","hashOfConfig":"5"},{"size":27390,"mtime":1686558706668,"results":"6","hashOfConfig":"5"},{"size":362,"mtime":1686125757000,"results":"7","hashOfConfig":"5"},{"filePath":"8","messages":"9","suppressedMessages":"10","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1g5rr5r",{"filePath":"11","messages":"12","suppressedMessages":"13","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"14"},{"filePath":"15","messages":"16","suppressedMessages":"17","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/alirebaie/Desktop/ai-travel-planner/src/index.js",[],[],"/Users/alirebaie/Desktop/ai-travel-planner/src/App.js",["18","19","20","21","22","23","24"],[],"import React, { useState } from \"react\";\nimport { ReactMarkdown } from \"react-markdown/lib/react-markdown\";\nimport styled from \"styled-components\";\n\nconst Container = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: start;\n  align-items: stretch;\n  min-height: 100vh;\n  height: 100%;\n\n  @media (max-width: 768px) {\n    flex-direction: column;\n    height: auto;\n  }\n\n  &::-webkit-scrollbar {\n    display: none;\n    width: 0px;\n    -ms-overflow-style: none;\n    scrollbar-width: none;\n    -ms-overflow-style: none;\n  }\n`;\n\nconst MainContent = styled.div`\n  flex-basis: 70%;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: start;\n  min-height: 100vh;\n  background-image: linear-gradient(\n    to bottom right,\n    #1a1a1a,\n    #222222,\n    #333333,\n    #444444,\n    #555555\n  );\n  background-size: 400% 400%;\n  color: #fff;\n  width: 100%;\n  height: 100%;\n\n  animation: gradient 15s ease infinite;\n  @keyframes gradient {\n    0% {\n      background-position: 0% 50%;\n    }\n    20% {\n      background-position: 50% 50%;\n    }\n    50% {\n      background-position: 100% 50%;\n    }\n    100% {\n      background-position: 0% 50%;\n    }\n  }\n\n  @media screen and (max-width: 1320px) {\n    flex-basis: 60%;\n  }\n\n  @media (max-width: 768px) {\n    height: auto;\n    min-height: 50px;\n    overflow-x: hidden;\n`;\n\nconst Title = styled.h1`\n  font-size: 4rem;\n  margin-top: 4rem;\n  color: #fff;\n  font-weight: bold;\n  text-shadow: 0 0 10px #000;\n  /* text-shadow: #f4ffcf 1px 0 10px; */\n  @media (max-width: 768px) {\n    font-size: 2.4rem;\n  }\n`;\n\nconst Subtitle = styled.h2`\n  font-size: 1rem;\n  font-weight: normal;\n  fon-family: \"Roboto\", sans-serif;\n`;\n\nconst FormContainer = styled.form`\n  flex: 1;\n  display: flex;\n  flex-direction: column;\n\n  top: 0;\n`;\n\nconst Loading = styled.p`\n  color: gradient;\n  font-size: 4rem;\n  font-weight: bold;\n  text-align: center;\n  margin: 1rem 0;\n\n  &::after {\n    content: \"‚è≥\";\n    animation: loading 2s infinite;\n  }\n\n  @keyframes loading {\n    0% {\n      content: \"‚åõÔ∏è\";\n    }\n    50% {\n      content: \"‚è≥\";\n    }\n    100% {\n      content: \"‚åõÔ∏è\";\n    }\n  }\n`;\n\nconst Label = styled.label`\n  font-size: 0.8rem;\n  font-weight: bold;\n  font-weight: 600;\n  color: #000fs0;\n  padding: 0.4rem;\n`;\n\nconst Input = styled.input`\n  border-radius: 0.4rem;\n  border: 1px solid #ccc;\n  font-size: 0.8rem;\n  color: #000;\n  width: calc(100% - 2rem);\n  padding: 0.6rem 0.6rem;\n  transition: border-color 0.3s ease-in-out;\n\n  &:focus {\n    border-color: #007bff;\n  }\n`;\n\nconst Select = styled.select`\n  padding: 0.6rem 0.6rem;\n  border-radius: 0.5rem;\n  border: 1px solid #ccc;\n  font-size: 0.8rem;\n  width: calc(100% - 0.6rem);\n  color: #000;\n  transition: border-color 0.3s ease-in-out;\n\n  &:focus {\n    border-color: #007bff;\n  }\n`;\n\nconst Button = styled.button`\n  padding: 0.5rem 1rem;\n  width: 100%;\n  border: none;\n  font-size: 1rem;\n\n  background-color: #0080ff;\n  color: #fff;\n  cursor: pointer;\n  border-radius: 0.4rem;\n  transition: background-color 0.3s ease-in-out;\n\n  &:hover {\n    background-color: #00bf2f;\n  }\n\n  &:disabled {\n    background-color: #ccc;\n    cursor: not-allowed;\n  }\n\n  &.loading {\n    background-color: #ccc;\n    cursor: not-allowed;\n  }\n`;\n\nconst FormRow = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n  align-items: center;\n`;\n\nconst ResponseContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst ResponseTitle = styled.h2`\n  font-size: 1.5rem;\n  font-weight: normal;\n`;\n\nconst ResponseText = styled.div`\n  width: 80%;\n  font-size: 1rem;\n  font-weight: normal;\n  color: #fff;\n  border-radius: 0.4rem;\n  padding: 1rem;\n  margin: 2rem;\n  @media (max-width: 768px) {\n    width: calc(100% - 2rem);\n    font-size: 0.9rem;\n  }\n  img {\n    display: block;\n    margin: 0 auto;\n    max-width: 100%;\n    height: auto;\n  }\n\n  a {\n    color: #fff;\n    text-decoration: underline;\n  }\n`;\n\nconst FormGroup = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: flex-start;\n  flex-wrap: wrap;\n  width: 100%;\n`;\n\nconst LanguageSelectorContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  margin-bottom: 1rem;\n`;\n\nconst LanguageRow = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: flex-start;\n  align-items: center;\n  flex-wrap: wrap;\n`;\n\nconst TopLocationContainer = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: flex-start;\n  align-items: center;\n  flex-wrap: wrap;\n\n  margin-top: 0.4rem;\n`;\n\nconst LanguageOption = styled.div`\n  display: flex;\n  font-size: 1.4rem;\n  flex-direction: column;\n  align-items: center;\n  margin-right: 0.2rem;\n  padding: 0.4rem;\n  border-radius: 0.4rem;\n  cursor: pointer;\n  transition: border-color 0.2s ease-in-out;\n  border: 1px solid transparent;\n\n  &:hover {\n    border: 1px solid rgba(0, 0, 0, 0.2);\n  }\n\n  &.selected {\n    border: 1px solid #007bff;\n    border-radius: 0.4rem;\n  }\n\n  &:hover {\n    border-color: #333;\n    border-radius: 0.4rem;\n  }\n`;\n\nconst PinButton = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  padding: 4px 4px;\n  font-size: 12px;\n  letter-spacing: 0px;\n  color: #000;\n  border: none;\n  border-radius: 5px;\n  cursor: pointer;\n  transition: background-color 0.2s ease-in-out;\n  border: 1px solid transparent;\n\n  &::before {\n    content: \"üìç\";\n    margin-right: 4px;\n    left: 8px;\n    top: 8px;\n  }\n\n  &:hover {\n    background-color: #f5f5f5;\n    border: 1px solid #ccc;\n  }\n`;\n\nconst ButtonContainer = styled.div`\n  display: flex;\n  justify-content: center;\n  margin-top: 4px;\n  margin-bottom: 16px;\n`;\n\n// Button component\nconst ActionButton = styled.button`\n  padding: 8px 16px;\n  border: none;\n  border-radius: 4px;\n  font-size: 12px;\n  font-weight: bold;\n  cursor: pointer;\n  margin: 0 4px;\n  color: #000;\n  background-color: #fff;\n  border: none;\n  border-radius: 5px;\n  cursor: pointer;\n  transition: background-color 0.2s ease-in-out;\n  border: 1px solid transparent;\n\n  &::before {\n    content: \"‚¨áÔ∏è\";\n    margin-right: 4px;\n    left: 8px;\n    top: 8px;\n  }\n\n  &:hover {\n    background-color: #dadada;\n    border: 1px solid #ccc;\n  }\n`;\n\nconst InterestsContainerNew = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: flex-start;\n  flex-wrap: wrap;\n  width: 100%;\n`;\n\nconst InterestItemNew = styled.div`\n  display: flex;\n  font-size: 12px;\n  align-items: center;\n  padding: 4px;\n  margin-right: 4px;\n  margin-bottom: 4px;\n  border: 1px solid transparent;\n  cursor: pointer;\n  transition: border-color 0.2s ease-in-out;\n  border-radius: 0.4rem;\n\n  &:hover {\n    border-color: #333;\n    border-radius: 0.4rem;\n  }\n\n  &.selected {\n    border: 1px solid #007bff;\n    border-radius: 0.4rem;\n  }\n`;\n\nconst InterestName = styled.span`\n  margin-left: 6px;\n  margin-right: 6px;\n`;\n\nconst InterestEmoji = styled.span`\n  font-size: 16px;\n`;\n\nconst Panel = styled.div`\n  display: flex;\n  flex-basis: 30%;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  padding: 1rem;\n  border: 1px solid #ccc;\n  background-color: #fff;\n  position: fixed;\n  width: 28%;\n  top: 0;\n  right: 0;\n  overflow-y: auto;\n\n  @media screen and (max-width: 1320px) {\n    flex-basis: calc(40% - 2.2rem);\n    width: calc(40% - 2.2rem);\n    position: relative;\n  }\n\n  @media (max-width: 768px) {\n    width: calc(100% - 2rem);\n    margin: 0 auto;\n  }\n\n  @media (max-height: 500px) {\n    width: calc(100% - 2rem);\n    margin: 0 auto;\n    overflow-y: scroll;\n    position: relative;\n  }\n`;\n\nconst CuisineTypesContainer = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  flex-wrap: wrap;\n`;\n\nconst CuisineType = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: center;\n  align-items: center;\n  cursor: pointer;\n  font-size: 0.8rem;\n  padding: 0.4rem;\n  margin-bottom: 5px;\n  margin-right: 5px;\n  border-radius: 0.4rem;\n  border: 1px solid transparent;\n  &.selected {\n    border: 1px solid #007bff;\n    border-radius: 0.4rem;\n  }\n  &:hover {\n    border-color: #333;\n    border-radius: 0.4rem;\n  }\n`;\n\nconst InfoContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  margin: 2rem;\n`;\n\nconst Info = styled.div`\n  margin: 1rem;\n  padding: 2rem;\n  border-radius: 8px;\n  box-shadow: 0 1px 2px rgba(0, 0, 0, 0.1);\n  background-color: #333;\n`;\n\nconst InfoTitle = styled.h2`\n  font-size: 1.5rem;\n  font-weight: 600;\n  margin-bottom: 1.5rem;\n  color: #fff;\n`;\n\nconst InfoText = styled.p`\n  font-size: 1.2rem;\n  margin-bottom: 1.5rem;\n  color: #fff;\n`;\n\n// Lead form will remove later on\n\nconst LeadForm = styled.form`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\n\nconst LeadInput = styled.input`\n  padding: 0.5rem;\n  border-radius: 0.5rem 0 0 0.5rem;\n  border: 2px solid #ccc;\n  font-size: 1.2rem;\n  width: 20rem;\n  margin-bottom: 1rem;\n`;\n\nconst LeadButton = styled.button`\n  padding: 0.5rem 1.5rem;\n  background-color: #007bff;\n  color: #fff;\n  border-radius: 0.5rem;\n  border: none;\n  font-size: 1.2rem;\n  cursor: pointer;\n\n  &:hover {\n    background-color: #0069d9;\n  }\n`;\n\nconst options = {\n  travelStyles: [\n    \"Cultural\",\n    \"Adventure\",\n    \"Relaxation\",\n    \"Beach\",\n    \"City Break\",\n    \"Road Trip\",\n    \"Wildlife Safari\",\n    \"Ski\",\n  ],\n  interestsNew: [\n    { name: \"History\", emoji: \"üèõÔ∏è\" },\n    { name: \"Art\", emoji: \"üé®\" },\n    { name: \"Food\", emoji: \"üç¥\" },\n    { name: \"Music\", emoji: \"üéµ\" },\n    { name: \"Nature\", emoji: \"üå≥\" },\n    { name: \"Sports\", emoji: \"‚öΩ\" },\n    { name: \"Photography\", emoji: \"üì∑\" },\n    { name: \"Architecture\", emoji: \"üè∞\" },\n    { name: \"Literature\", emoji: \"üìö\" },\n  ],\n\n  interests: [\n    \"History\",\n    \"Art\",\n    \"Food\",\n    \"Music\",\n    \"Nature\",\n    \"Sports\",\n    \"Photography\",\n    \"Architecture\",\n    \"Literature\",\n  ],\n\n  accommodationTypes: [\n    \"Hotel\",\n    \"Boutique Hotel\",\n    \"Hostel\",\n    \"Resort\",\n    \"Vacation Rental\",\n    \"Camping\",\n    \"Homestay\",\n    \"Bed and Breakfast\",\n  ],\n  activityTypes: [\n    \"Outdoor\",\n    \"Sightseeing\",\n    \"Shopping\",\n    \"Nightlife\",\n    \"Museums\",\n    \"Theme Parks\",\n    \"Water Sports\",\n    \"Yoga and Wellness\",\n  ],\n  cuisineTypes: [\n    { name: \"Traditional\", emoji: \"üòã\" },\n    { name: \"Japanese\", emoji: \"üç±\" },\n    { name: \"Italian\", emoji: \"üçù\" },\n    { name: \"American\", emoji: \"üçî\" },\n    { name: \"Korean\", emoji: \"üçú\" },\n    { name: \"Mexican\", emoji: \"üåÆ\" },\n    { name: \"Thai\", emoji: \"üç≤\" },\n    { name: \"Turkish\", emoji: \"ü•ô\" },\n    { name: \"Indian\", emoji: \"üçõ\" },\n    { name: \"French\", emoji: \"ü•ê\" },\n    { name: \"Spanish\", emoji: \"ü•ò\" },\n    { name: \"Greek\", emoji: \"üçó\" },\n    { name: \"Chinese\", emoji: \"ü•°\" },\n  ],\n\n  languages: [\n    { value: \"en\", label: \"English\", icon: \"üá∫üá∏\" },\n    { value: \"tr\", label: \"Arabic\", icon: \"üá¶üá™\" },\n    { value: \"tr\", label: \"T√ºrk√ße\", icon: \"üáπüá∑\" },\n    { value: \"fr\", label: \"Fran√ßais\", icon: \"üá´üá∑\" },\n    { value: \"es\", label: \"Espa√±ol\", icon: \"üá™üá∏\" },\n    { value: \"de\", label: \"Deutsch\", icon: \"üá©üá™\" },\n    { value: \"pt\", label: \"Portugu√™s\", icon: \"üáµüáπ\" },\n    { value: \"ru\", label: \"–†—É—Å—Å–∫–∏–π\", icon: \"üá∑üá∫\" },\n    { value: \"ja\", label: \"Êó•Êú¨Ë™û\", icon: \"üáØüáµ\" },\n  ],\n};\n\nconst topLocations = [\n  { name: \"UAE, Ajman\", value: \"UAE/Ajman\" }\n  // add more top locations as needed\n];\n\nconst defaultValues = {\n  destinationCountry: \"\",\n  budget: \"250 USD\",\n  travelStyle: options.travelStyles[0],\n  interestsNew: [],\n  accommodationType: options.accommodationTypes[0],\n  transportationType: \"Bus\",\n  activityType: [options.activityTypes[0]],\n  cuisineType: options.cuisineTypes[0],\n  tripDuration: \"3\",\n  language: options.languages[0].value,\n};\n\nconst Main = ({ loading, response, handleSubmit, handleChange, email }) => (\n  <MainContent>\n    <Title>AI-Majd Ajman</Title>\n    {!response && <Subtitle>Fill the form to generate your itinerary</Subtitle>}\n\n    <ResponseContainer>\n      {loading ? <Loading /> : response && <ResponseData response={response} />}\n    </ResponseContainer>\n  </MainContent>\n);\n\nconst ResponseData = ({ response }) => {\n  return (\n    <ResponseContainer>\n      <ResponseTitle>\n        <span role=\"img\" aria-label=\"emoji\"></span> Your travel plan is ready üéâ‚úàÔ∏è \n      </ResponseTitle>\n      <ResponseText>\n        <ReactMarkdown>{response}</ReactMarkdown>\n      </ResponseText>\n      <ButtonContainer>\n        <ActionButton\n          onClick={() => {\n            const blob = new Blob([response], {\n              type: \"text/plain;charset=utf-8\",\n            });\n            const url = URL.createObjectURL(blob);\n            const link = document.createElement(\"a\");\n            link.setAttribute(\"href\", url);\n            link.setAttribute(\"download\", \"travel-plan.txt\");\n            document.body.appendChild(link);\n            link.click();\n            document.body.removeChild(link);\n            URL.revokeObjectURL(url);\n            return false;\n          }}\n        >\n          Download\n        </ActionButton>\n      </ButtonContainer>\n    </ResponseContainer>\n  );\n};\n\nconst GenerateButton = ({ loading, onClick }) => (\n  <Button onClick={onClick} disabled={loading}>\n    {loading ? \"Please wait...\" : \"Generate\"}\n  </Button>\n);\n\nconst AITravelPlanner = () => {\n  const [loading, setLoading] = useState(false);\n  const [response, setResponse] = useState(\"\");\n  const [values, setValues] = useState(defaultValues);\n  const [selectedInterests, setSelectedInterests] = useState([]);\n  const [selectedCuisineTypes, setSelectedCuisineTypes] = useState([]);\n  const [selectedLanguage, setSelectedLanguage] = useState(\n    options.languages[0]\n  );\n\n  const handleCuisineTypeClick = (cuisineType) => {\n    if (selectedCuisineTypes.includes(cuisineType)) {\n      setSelectedCuisineTypes(\n        selectedCuisineTypes.filter((item) => item !== cuisineType)\n      );\n      setValues((prevState) => ({\n        ...prevState,\n        cuisineType: selectedCuisineTypes.filter(\n          (item) => item !== cuisineType\n        ),\n      }));\n    } else {\n      if (selectedCuisineTypes.length >= 3) {\n        setSelectedCuisineTypes((prevSelectedCuisineTypes) => {\n          const newSelectedCuisineTypes = [\n            ...prevSelectedCuisineTypes.slice(1),\n            cuisineType,\n          ];\n          setValues((prevState) => ({\n            ...prevState,\n            cuisineType: newSelectedCuisineTypes,\n          }));\n          return newSelectedCuisineTypes;\n        });\n      } else {\n        setSelectedCuisineTypes((prevSelectedCuisineTypes) => {\n          const newSelectedCuisineTypes = [\n            ...prevSelectedCuisineTypes,\n            cuisineType,\n          ];\n          setValues((prevState) => ({\n            ...prevState,\n            cuisineType: newSelectedCuisineTypes,\n          }));\n          return newSelectedCuisineTypes;\n        });\n      }\n    }\n  };\n\n  const handleInterestClick = (interest) => {\n    if (selectedInterests.includes(interest)) {\n      setSelectedInterests(\n        selectedInterests.filter((item) => item !== interest)\n      );\n    } else {\n      if (selectedInterests.length >= 3) {\n        setSelectedInterests((prevSelectedInterests) => {\n          const newSelectedInterests = [\n            ...prevSelectedInterests.slice(1),\n            interest,\n          ];\n          setValues((prevState) => ({\n            ...prevState,\n            interestsNew: newSelectedInterests,\n          }));\n          return newSelectedInterests;\n        });\n      } else {\n        setSelectedInterests((prevSelectedInterests) => {\n          const newSelectedInterests = [...prevSelectedInterests, interest];\n          setValues((prevState) => ({\n            ...prevState,\n            interestsNew: newSelectedInterests,\n          }));\n          return newSelectedInterests;\n        });\n      }\n    }\n  };\n  // TODO: Add a function to handle the language, cuisine type and interest selection\n  /* const handleSelect = (option, field, maxSelect) => {\n    let selectedValues = values[field] || [];\n\n    if (selectedValues.includes(option)) {\n      // Remove the option from the selected values\n      selectedValues = selectedValues.filter((value) => value !== option);\n    } else {\n      // Add the option to the selected values\n      if (selectedValues.length >= maxSelect) {\n        // Remove the first selected value if the maximum number of options is reached\n        selectedValues.shift();\n      }\n      selectedValues.push(option);\n    }\n\n    // Update the form state\n    setValues((prevState) => ({\n      ...prevState,\n      [field]: selectedValues,\n    }));\n  }; */\n\n  const handleChange = (e) => {\n    const { name, value } = e.target;\n    setValues((prevState) => ({\n      ...prevState,\n      [name]: value,\n    }));\n  };\n\n  const handleLocationClick = (location) => {\n    setValues((prevState) => ({\n      ...prevState,\n      destinationCountry: location.name,\n    }));\n  };\n\n  const handleMultiSelectChange = (e) => {\n    const { name, options } = e.target;\n    const selectedOptions = [];\n    for (let i = 0; i < options.length; i++) {\n      if (options[i].selected) {\n        selectedOptions.push(options[i].value);\n      }\n    }\n    setValues((prevState) => ({\n      ...prevState,\n      [name]: selectedOptions,\n    }));\n  };\n\n  const handleLanguageClick = (option) => {\n    setSelectedLanguage(option.value);\n\n    setValues((prevState) => ({\n      ...prevState,\n      language: option.label,\n    }));\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    setLoading(true);\n    let prompt = `Generate a personalized travel itinerary for a trip to ${values.destinationCountry} with a budget of ${values.budget}. The traveler is interested in a ${values.travelStyle} vacation and enjoys ${values.interestsNew}. They are looking for ${values.accommodationType} accommodations and prefer ${values.transportationType} transportation. The itinerary should include ${values.activityType} activities and ${values.cuisineType} dining options. Please provide a detailed itinerary with daily recommendations for ${values.tripDuration} days, including suggested destinations, activities, and dining options. The itinerary should be written in ${values.language}. `;\n\n    fetch('https://c4-na.altogic.com/e:648040ff07c2309f75adb9c2/travel',\n      //  `${process.env.REACT_APP_ENDPOINT_URL}`,\n      {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n          // \"Accept\": \"*/*\"\n\n        },\n        body: JSON.stringify({ prompt: prompt }),\n      })\n      .then((response) => response.json())\n      .then((data) => {\n        setResponse(data.choices[0].message.content);\n        setLoading(false);\n      })\n      .catch((error) => {\n        console.error(error);\n        setLoading(false);\n      });\n  };\n  const [email, setEmail] = useState(\"\");\n\n  const handleLeadSubmit = (event) => {\n    event.preventDefault();\n    const requestOptions = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ email: email }),\n    };\n    fetch(\n      \"https://c4-na.altogic.com/e:6431cdd646d52b27d865c9da/lead\",\n      requestOptions\n    )\n      .then((response) => response.json())\n      .then((data) => console.log(data));\n    setEmail(\"\");\n  };\n\n  const handleLeadChange = (event) => {\n    setEmail(event.target.value);\n  };\n\n  return (\n    <>\n      <Container>\n        <Main\n          loading={loading}\n          response={response}\n          handleSubmit={handleLeadSubmit}\n          handleChange={handleLeadChange}\n          email={email}\n        />\n        <Panel>\n          <FormContainer onSubmit={handleSubmit}>\n            <Label htmlFor=\"destinationCountry\">Destination Country</Label>\n            <Input\n              type=\"text\"\n              placeholder=\"e.g. Ajman/UAE\"\n              id=\"destinationCountry\"\n              name=\"destinationCountry\"\n              value={values.destinationCountry}\n              onChange={handleChange}\n              required\n            />\n            <TopLocationContainer>\n              <Label htmlFor=\"topDestinations\">üî•Top Destinations:</Label>\n              {topLocations.map((location) => (\n                <PinButton\n                  key={location.value}\n                  onClick={() => handleLocationClick(location)}\n                >\n                  {location.name}\n                </PinButton>\n              ))}\n            </TopLocationContainer>\n            <FormRow>\n              <FormGroup>\n                <Label htmlFor=\"budget\">\n                  Budget\n                  <p\n                    style={{\n                      display: \"inline-block\",\n                      color: \"#666\",\n                      fontSize: \"10px\",\n                    }}\n                  >\n                    (with currency)\n                  </p>\n                </Label>\n                <Input\n                  type=\"text\"\n                  placeholder=\"e.g. $1000 USD, 1000 EUR, etc.\"\n                  id=\"budget\"\n                  name=\"budget\"\n                  value={values.budget}\n                  onChange={handleChange}\n                  required\n                />\n              </FormGroup>\n              <FormGroup>\n                <Label htmlFor=\"tripDuration\">\n                  Trip Duration\n                  <p\n                    style={{\n                      display: \"inline-block\",\n                      color: \"#666\",\n                      fontSize: \"10px\",\n                    }}\n                  >\n                    (in days)\n                  </p>\n                </Label>\n                <Input\n                  type=\"number\"\n                  id=\"tripDuration\"\n                  name=\"tripDuration\"\n                  value={values.tripDuration}\n                  onChange={handleChange}\n                  required\n                />\n              </FormGroup>\n            </FormRow>\n            <Label htmlFor=\"interests\">Interests</Label>\n            <InterestsContainerNew>\n              {options.interestsNew.map((interest, index) => (\n                <InterestItemNew\n                  key={index}\n                  className={\n                    selectedInterests.includes(interest.name) ? \"selected\" : \"\"\n                  }\n                  onClick={() => {\n                    handleInterestClick(interest.name);\n                  }}\n                  value={interest}\n                >\n                  <InterestEmoji aria-label=\"emoji\">\n                    {interest.emoji}\n                  </InterestEmoji>\n                  <InterestName>{interest.name}</InterestName>\n                </InterestItemNew>\n              ))}\n            </InterestsContainerNew>\n\n            <FormRow>\n              <FormGroup>\n                <Label htmlFor=\"accommodationType\">Accommodation</Label>\n                <Select\n                  id=\"accommodationType\"\n                  name=\"accommodationType\"\n                  value={values.accommodationType}\n                  onChange={handleChange}\n                >\n                  {options.accommodationTypes.map((option) => (\n                    <option key={option} value={option}>\n                      {option}\n                    </option>\n                  ))}\n                </Select>\n              </FormGroup>\n              <FormGroup>\n                <Label htmlFor=\"travelStyle\">Travel Style</Label>\n                <Select\n                  id=\"travelStyle\"\n                  name=\"travelStyle\"\n                  value={values.travelStyle}\n                  onChange={handleChange}\n                >\n                  {options.travelStyles.map((option) => (\n                    <option key={option} value={option}>\n                      {option}\n                    </option>\n                  ))}\n                </Select>\n              </FormGroup>\n            </FormRow>\n\n            <Label htmlFor=\"transportationType\">\n              Transportation Type\n              <p\n                style={{\n                  display: \"inline-block\",\n                  fontSize: \"10px\",\n\n                  color: \"#666\",\n                }}\n              >\n                (e.g. car, train, bus, etc.)\n              </p>\n            </Label>\n            <Input\n              type=\"text\"\n              id=\"transportationType\"\n              name=\"transportationType\"\n              value={values.transportationType}\n              onChange={handleChange}\n              required\n            />\n\n            <Label htmlFor=\"activityType\">\n              Activity Type\n              <p\n                style={{\n                  display: \"inline-block\",\n                  fontSize: \"10px\",\n\n                  color: \"#666\",\n                }}\n              >\n                (select multiple options)\n              </p>\n            </Label>\n            <Select\n              id=\"activityType\"\n              name=\"activityType\"\n              multiple\n              value={values.activityType}\n              onChange={handleMultiSelectChange}\n            >\n              {options.activityTypes.map((option) => (\n                <option key={option} value={option}>\n                  {option}\n                </option>\n              ))}\n            </Select>\n            <Label htmlFor=\"cuisineType\">Cuisine Type</Label>\n            <CuisineTypesContainer>\n              {options.cuisineTypes.map((cuisineType) => (\n                <CuisineType\n                  multiple\n                  value={values.cuisineType}\n                  onChange={handleMultiSelectChange}\n                  key={cuisineType.name}\n                  className={\n                    selectedCuisineTypes.includes(cuisineType.name)\n                      ? \"selected\"\n                      : \"\"\n                  }\n                  onClick={() => {\n                    handleCuisineTypeClick(cuisineType.name);\n                  }}\n                >\n                  <span role=\"img\" aria-label={cuisineType.name}>\n                    {cuisineType.emoji}\n                  </span>\n\n                  <br />\n\n                  <span>{cuisineType.name}</span>\n                </CuisineType>\n              ))}\n            </CuisineTypesContainer>\n\n            <LanguageSelectorContainer>\n              <Label>Language</Label>\n              <LanguageRow>\n                {options.languages.map((option) => (\n                  <LanguageOption\n                    key={option.value}\n                    onClick={() => {\n                      handleLanguageClick(option);\n                    }}\n                    value={values.language}\n                    className={\n                      selectedLanguage === option.value ? \"selected\" : \"\"\n                    }\n                  >\n                    <span role=\"img\" aria-label={option.label}>\n                      {option.icon}\n                    </span>\n                  </LanguageOption>\n                ))}\n              </LanguageRow>\n            </LanguageSelectorContainer>\n            <GenerateButton\n              loading={loading}\n              type=\"submit\"\n              disabled={loading}\n              className={loading ? \"loading\" : \"\"}\n            ></GenerateButton>\n          </FormContainer>\n        </Panel>\n      </Container>\n    </>\n  );\n};\n\nexport default AITravelPlanner;\n","/Users/alirebaie/Desktop/ai-travel-planner/src/reportWebVitals.js",[],[],{"ruleId":"25","severity":1,"message":"26","line":457,"column":7,"nodeType":"27","messageId":"28","endLine":457,"endColumn":20},{"ruleId":"25","severity":1,"message":"29","line":465,"column":7,"nodeType":"27","messageId":"28","endLine":465,"endColumn":11},{"ruleId":"25","severity":1,"message":"30","line":473,"column":7,"nodeType":"27","messageId":"28","endLine":473,"endColumn":16},{"ruleId":"25","severity":1,"message":"31","line":480,"column":7,"nodeType":"27","messageId":"28","endLine":480,"endColumn":15},{"ruleId":"25","severity":1,"message":"32","line":488,"column":7,"nodeType":"27","messageId":"28","endLine":488,"endColumn":15},{"ruleId":"25","severity":1,"message":"33","line":494,"column":7,"nodeType":"27","messageId":"28","endLine":494,"endColumn":16},{"ruleId":"25","severity":1,"message":"34","line":503,"column":7,"nodeType":"27","messageId":"28","endLine":503,"endColumn":17},"no-unused-vars","'InfoContainer' is assigned a value but never used.","Identifier","unusedVar","'Info' is assigned a value but never used.","'InfoTitle' is assigned a value but never used.","'InfoText' is assigned a value but never used.","'LeadForm' is assigned a value but never used.","'LeadInput' is assigned a value but never used.","'LeadButton' is assigned a value but never used."]